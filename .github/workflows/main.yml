---
name: CI

on:
  push:
    branches: ["main"]
    tags:
      - "*"
  pull_request:
    branches: ["main"]


env:
  # Give nice tracebacks on segfaults.
  PYTHONFAULTHANDLER: "true"
  MATURIN_VERSION: "1.8.3"


jobs:
  tests:
    name: "${{ matrix.os }}: Python ${{ matrix.python-version }}"
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-latest", "macos-13", "windows-latest", "ubuntu-24.04-arm"]

    env:
      MATURIN_EXTRA: ""

    runs-on: "${{ matrix.os }}"
    steps:
      - uses: "actions/checkout@v5"
        with:
          # We need tags to get the correct code version:
          fetch-depth: 0
      - uses: "actions/setup-python@v5"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: "dtolnay/rust-toolchain@stable"
      - name: "Compile"
        run: |
          pip install -r requirements-dev.txt
          pip install .
      - name: "Tests"
        run: |
          flake8 pysrc tests
          mypy --strict pysrc tests
          black --check pysrc tests
          pytest tests
      - name: "Enable universal2 on Python >= 3.9 on macOS"
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          rustup target add aarch64-apple-darwin
          echo "MATURIN_EXTRA=--target=universal2-apple-darwin" >> $GITHUB_ENV
      - name: "Wheels"
        uses: messense/maturin-action@v1
        with:
          maturin-version: "${{ env.MATURIN_VERSION }}"
          command: build
          manylinux: auto
          args: --release --out target/wheels/ -i python${{ matrix.python-version }} ${{ env.MATURIN_EXTRA }}
      - name: "sdist"
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' }}  # MUST MATCH BELOW
        run: |
          pip install maturin==${{ env.MATURIN_VERSION }}
          maturin sdist
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "Wheels-${{ matrix.python-version}}-${{ matrix.os }}"
          path: target/wheels/*.whl
      - name: Archive production artifacts 2
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' }}  # MUST MATCH ABOVE
        uses: actions/upload-artifact@v4
        with:
          name: "Wheels-tarball"
          path: target/wheels/ahocorasick*.tar.gz

  publish:
    needs: ['tests']
    environment: 'release'
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: Wheels*
          merge-multiple: true
          path: dist/
      - run: |
          # Remove badly named wheels:
          rm dist/*-linux_*.whl
          # Show what's left:
          ls -R dist/
      - name: Publish package distributions to PyPI (if tagged)
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          packages_dir: dist/
